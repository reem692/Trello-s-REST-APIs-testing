{
	"info": {
		"_postman_id": "5530252d-56f6-4d64-ba89-a054339e2644",
		"name": "Swagger Collection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "23270902"
	},
	"item": [
		{
			"name": "Authors",
			"item": [
				{
					"name": "Get Authors",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Test Case 1\r",
									"pm.test(\"Status code should be 200 OK\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"//Test Case 2\r",
									"pm.test(\"Response body should contain id, idBook, firstName, lastName\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"id\");\r",
									"    pm.expect(pm.response.text()).to.include(\"idBook\");\r",
									"    pm.expect(pm.response.text()).to.include(\"firstName\");\r",
									"    pm.expect(pm.response.text()).to.include(\"lastName\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseURL}}api/v1/Authors",
							"host": [
								"{{BaseURL}}api"
							],
							"path": [
								"v1",
								"Authors"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Author",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Test Case 1\r",
									"pm.test(\"Status code is 200, User created\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"//Test Case 2\r",
									"pm.test(\"firstName or lastName is mandatory\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": 1000,\r\n  \"idBook\": 1,\r\n  \"firstName\": \"Joe\",\r\n  \"lastName\": \"Doe\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BaseURL}}api/v1/Authors",
							"host": [
								"{{BaseURL}}api"
							],
							"path": [
								"v1",
								"Authors"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Authors by idBook",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"let idBooks = pm.collectionVariables.get(\"idBooks\");\r",
									"\r",
									"\r",
									"if(!idBooks || idBooks.length == 0) {\r",
									"    idBooks = [1, 2, 3];\r",
									"}\r",
									"\r",
									"let currentIdBook = idBooks.shift();\r",
									"console.log(currentIdBook)\r",
									"pm.collectionVariables.set(\"idBook\", currentIdBook);\r",
									"pm.collectionVariables.set(\"idBooks\", idBooks);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json()[0];\r",
									"var currentIdBook = pm.collectionVariables.get(\"idBook\");\r",
									"pm.test(\"searching with a valid idBook should return results which contain idBook\", function () {\r",
									"    pm.expect(jsonData.idBook).to.eql(currentIdBook);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseURL}}api/v1/Authors/authors/books/{{idBook}}",
							"host": [
								"{{BaseURL}}api"
							],
							"path": [
								"v1",
								"Authors",
								"authors",
								"books",
								"{{idBook}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Author",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Author's firstName and lastName should be successfully updated\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.firstName).to.eql(\"Jane\");\r",
									"    pm.expect(jsonData.lastName).to.eql(\"Doe\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": 1,\r\n  \"idBook\": 1,\r\n  \"firstName\": \"Jane\",\r\n  \"lastName\": \"Doe\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BaseURL}}api/v1/Authors/1",
							"host": [
								"{{BaseURL}}api"
							],
							"path": [
								"v1",
								"Authors",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Author by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"pm.test(\"Author's firstname and lastname should be changed after successfully updated in PUT request\", function () {\r",
									"    pm.expect(jsonData.firstName).to.eql(\"Jane\");\r",
									"    pm.expect(jsonData.lastName).to.eql(\"Doe\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseURL}}api/v1/Authors/1",
							"host": [
								"{{BaseURL}}api"
							],
							"path": [
								"v1",
								"Authors",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Author",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code should be 200 OK\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{BaseURL}}api/v1/Authors/1",
							"host": [
								"{{BaseURL}}api"
							],
							"path": [
								"v1",
								"Authors",
								"1"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "idBook",
			"value": ""
		},
		{
			"key": "idBooks",
			"value": ""
		}
	]
}